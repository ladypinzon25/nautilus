{"version":3,"sources":["Information.js","Chip.js","Home.js","App.js","index.js"],"names":["Information","react_default","a","createElement","className","this","props","title","text","Component","Chip","href","link","src","image","alt","Home","state","openDialog","data","_this","setState","handleClose","handleChange","selectorFiles","reader","FileReader","onload","e","vega","target","result","type","setData","readAsText","loadData","value","_this2","src_Information_0","index_es","variant","color","onClick","src_Chip_0","name","open","onClose","aria-labelledby","aria-describedby","id","size","accept","onChange","files","libVoyager","require","App","voyagerInstance","isHome","buildNautilus","newData","columns","key","hasOwnProperty","push","initVoyager","initNavio","window","d3","csv","err","voyagerContainer","document","getElementById","voyagerData","values","splice","CreateVoyager","undefined","updateData","nv","navio","select","updateCallback","updateVoyager","forEach","columnName","determineColumnType","addSequentialAttrib","addCategoricalAttrib","max","length","sample","i","Math","floor","random","every","c","isNaN","updatedData","src_Home_0","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.916031af.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./Information.css\"\r\n\r\nclass Information extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"information\">\r\n        <div className=\"information__title\">{this.props.title}</div>\r\n        <div className=\"information__text\">\r\n          {this.props.text}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Information;","import React, {Component} from 'react';\r\n// import {Tooltip} from \"material-ui\";\r\n\r\nimport \"./Chip.css\"\r\n\r\nclass Chip extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"chip\">\r\n        <a href={this.props.link}>\r\n          {/*<Tooltip title={this.props.name}>*/}\r\n            <img src={this.props.image} className=\"chip__circle\" alt=\"chip circle\"/>\r\n          {/*</Tooltip>*/}\r\n        </a>\r\n      </div>\r\n    )\r\n      ;\r\n  }\r\n}\r\n\r\nexport default Chip;\r\n\r\n","import React, {Component} from 'react';\r\nimport Information from \"./Information\";\r\nimport {\r\n  CardActions,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from \"material-ui\";\r\nimport Chip from \"./Chip\";\r\nimport \"./Home.css\"\r\nimport * as vega from 'vega';\r\n\r\nclass Home extends Component {\r\n\r\n  state =\r\n    {\r\n      openDialog: false,\r\n      data: \"\"\r\n    };\r\n\r\n\r\n  openDialog = () => {\r\n    this.setState({openDialog: true});\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({openDialog: false});\r\n  };\r\n\r\n  handleChange = (selectorFiles) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      const data = vega.read(e.target.result, {type: \"csv\"});\r\n      this.props.setData(data);\r\n    };\r\n    reader.readAsText(selectorFiles[0]);\r\n  };\r\n  loadData = (value) => {\r\n    if (value === \"followers\") {\r\n      this.props.loadData(\"/datasets/all_followers_id.csv\")\r\n    }\r\n    else if (value === \"momma\") {\r\n      this.props.loadData(\"/datasets/Artworks_less_columns.csv\")\r\n    }\r\n    else {\r\n      this.props.loadData(\"/datasets/Lekagul Sensor Data.csv\")\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"home__information-column\">\r\n          <div className=\"home__main-title\">\r\n            Nautilus\r\n          </div>\r\n          <div className=\"home__title\">\r\n            Voyager & Navio\r\n          </div>\r\n          <Information title=\"Description\"\r\n                       text=\"Nautilus is an application which offers a fulfilling data exploration and visualization\r\n                        experience by combining two libraries called Navio and Voyager. First, Navio is a visualization\r\n                         widget focused in summarizing, exploring and navigating big datasets. In another hand, Voyager\r\n                          is a data exploration tool which show to the user multiple graphs and visualization suggestions\r\n                           which summarize the desired datasets. By combining both libraries, Nautilus is able to filter\r\n                            the datasets and show the selected data in multiple visualizations by using Voyager.\"/>\r\n          <Information title=\"How to use it?\"\r\n                       text=\"Here you can load predefined datasets or your own dataset to begin to summarize, explore,\r\n                       navigate and visualize it. In the bottom part you cand find Navio that has three main interactions,\r\n                       click on a header to sort the data, click on a value to select it, or drag to select a range.\r\n                       In the main view is Voyager that contains wildcards that let users specify multiple charts in parallel\r\n                       and it has related views suggest visualizations relevant to the currently specified chart.\r\n                       \"/>\r\n        </div>\r\n        <div className=\"home__options-column\">\r\n          <div className=\"home__nautilus-gif-container\">\r\n            <img className=\"home__nautilus-gif\" src=\"https://j.gifs.com/59m3RX.gif\"/>\r\n          </div>\r\n          <Button variant=\"raised\" className=\"home__button\" color=\"primary\" onClick={this.openDialog}>Get\r\n            started</Button>\r\n          <div className=\"home__chips-container\">\r\n            <Chip link=\"https://github.com/ljpinzon12\" name=\"Lady Pinzón\" image=\"./LadyPinzon.jpg\"/>\r\n            <Chip link=\"https://github.com/john-guerra\" name=\"John Guerra\" image=\"./JohnGuerra.jpg\"/>\r\n          </div>\r\n          <div className=\"home__learn-more-option\">\r\n            <Button variant=\"outlined\" href=\"https://ljpinzon12.github.io/nautilusPage/\" className=\"home__learn-more-button\"\r\n            >Learn more...</Button>\r\n          </div>\r\n        </div>\r\n        <Dialog\r\n          open={this.state.openDialog}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          className=\"home__dialog\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Upload data\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\" className=\"home__card-content\">\r\n              Explore pre-loaded datasets\r\n            </DialogContentText>\r\n            <div className=\"home__cards-container\">\r\n              <Card className=\"home__card\">\r\n                <CardContent>\r\n                  <div className=\"home__card-title\">\r\n                    Followers of presidential candid\r\n                  </div>\r\n                  <div className=\"home__card-text\">\r\n                    Description: Dataset with information about followers on twitter of the presidential cadidates.\r\n                    Records(rows): 1048575\r\n                    Attributes: 10\r\n                  </div>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" onClick={() => this.loadData(\"followers\")}>Start</Button>\r\n                </CardActions>\r\n              </Card>\r\n              <Card className=\"home__card\">\r\n                <CardContent>\r\n                  <div className=\"home__card-title\">\r\n                    MoMA Collection\r\n                  </div>\r\n                  <div className=\"home__card-text\">\r\n                    Description: Evolving collection contains almost 130,000 works of modern and contemporary art.\r\n                    Records(rows): 131585\r\n                    Attributes: 14\r\n                  </div>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" onClick={() => this.loadData(\"momma\")}>Start</Button>\r\n                </CardActions>\r\n              </Card>\r\n              <Card className=\"home__card\">\r\n                <CardContent>\r\n                  <div className=\"home__card-title\">\r\n                    VAST Challenge 2017\r\n                  </div>\r\n                  <div className=\"home__card-text\">\r\n                    Description: This offered three mini-challenges and a grand challenge dealing with environmental\r\n                    problems.\r\n                    Records(rows): 171477\r\n                    Attributes: 4\r\n                  </div>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" onClick={() => this.loadData(\"vast\")}>Start</Button>\r\n                </CardActions>\r\n              </Card>\r\n            </div>\r\n            <DialogContentText id=\"alert-dialog-description\" className=\"home__card-content\">\r\n              Upload your dataset.\r\n            </DialogContentText>\r\n            <input className=\"home__dialog-input\" type=\"file\" accept=\".csv,.tsv,.txt\"\r\n                   onChange={(e) => this.handleChange(e.target.files)}/>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button className=\"dialog-button\" onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n      ;\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\nimport './App.css';\nimport Home from \"./Home\";\n\nconst libVoyager = require('../node_modules/datavoyager');\n\nclass App extends Component {\n  state = {\n    voyagerInstance: null,\n    isHome: true,\n    data: \"\"\n  };\n\n  buildNautilus = (newData) => {\n    if (newData) {\n    const columns = [];\n\n      for (let key in newData[0]) {\n        if (newData[0].hasOwnProperty(key)) {\n          columns.push(key);\n        }\n      }\n      newData.columns = columns;\n      this.setState({isHome: false}, () => {\n        this.initVoyager(newData);\n        this.initNavio(newData);\n      });\n    } else {\n      window.d3.csv(this.state.data, (err, data) => {\n        if (err) {\n          throw err;\n        }\n\n        this.initVoyager(data);\n        this.initNavio(data);\n      });\n    }\n  };\n\n  initVoyager = (data) => {\n    const voyagerContainer = document.getElementById(\"voyager-embed\");\n    const voyagerData = {values: data.splice(0, 500)};\n    const voyagerInstance = libVoyager.CreateVoyager(voyagerContainer, undefined, voyagerData);\n\n    delete voyagerData.values.columns;\n\n    this.setState({voyagerInstance}, () => {\n      this.state.voyagerInstance.updateData(voyagerData);\n    });\n  };\n\n  initNavio = (data) => {\n    const nv = window.navio(window.d3.select(\"#navio\"), 300).updateCallback(this.updateVoyager);\n\n    data.columns.forEach(columnName => {\n      if (this.determineColumnType(columnName, data) === \"sequential\") {\n        nv.addSequentialAttrib(columnName);\n      } else {\n        nv.addCategoricalAttrib(columnName);\n      }\n    });\n\n    nv.data(data);\n  };\n\n  determineColumnType = (columnName, data) => {\n    const max = data.length;\n    const sampleSize = 10;\n    const sample = [];\n\n    for (let i = 0; i < sampleSize; i++) {\n      sample.push(data[Math.floor(Math.random() * max)][columnName]);\n    }\n\n    const areAllElementsNumbers = sample.every(c => !isNaN(c));\n\n    return areAllElementsNumbers ? \"sequential\" : \"categorical\";\n  };\n\n  updateVoyager = (updatedData) => {\n    this.state.voyagerInstance.updateData({values: updatedData});\n  };\n\n  loadData = (data) => {\n    this.setState({\n      data,\n      isHome: false\n    }, () => this.buildNautilus())\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isHome\n          ?\n          <Home loadData={this.loadData} setData={this.buildNautilus}/>\n          :\n          <div>\n            <div id=\"voyager-embed\"/>\n            <div id=\"navio\"/>\n          </div>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}